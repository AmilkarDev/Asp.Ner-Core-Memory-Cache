@{
    ViewData["Title"] = "Home Page";
}

<h2> Name : </h2>
<div class="alert alert-info" role="alert">
    <p style="color:red">@ViewData["name"]  </p>
    </div>
    <h2>Source : </h2>
    <div class="alert alert-info" role="alert">
        <p style="color:red">@ViewData["source"]</p>
        </div>
        <div class="alert alert-success" role="alert">
            <h2 class="alert-heading">Explanation :</h2>
            The name values indicates the content of the cache  , while the source values indicates whether the value of the name is restored from the app itself or from
            the cache , so for the first time , the cache will be empty , and the the shown value of the name will be restored from the application as indicated in the
            source (NOt cache)<br />
            On loading the page for the first time , if the cache is empty , the app will fill it with the static value of the name restored from the app,
            so if you reload the page for the second time , the value of the name will be shown directly/easily from the cache , which will be demonstrated
            by the value of source as it will indicate (Cache)<br />
            So now the cache is not empty anymore , but for how long it will stay filled ?? trying to optimize the performance of the application , we need to work
            on limiting the size of the cache , that's why  I used the setSlidingExpiration method with a parameter of 1 minute , so if you don't visit /reload the page for
            one minute , the cache will be emptied and you will need to reload the value of the name from the app instead of the cache .'
        </div>

